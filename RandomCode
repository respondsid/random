//Max counter problem

// you can also use imports, for example:
// import java.util.*;

// you can write to stdout for debugging purposes, e.g.
// System.out.println("this is a debug message");

class Solution {
    public int[] solution(int N, int[] A) {
        // write your code in Java SE 8
        int[] counters= new int[N];
        int currentMaxCounter=0;
        int counterVal=0;
        for(int i=0;i<A.length;i++){
            if(A[i] <=N){
               counters[A[i]-1]++;
               counterVal=counters[A[i]-1];
                if(counterVal>currentMaxCounter){
                   currentMaxCounter=counterVal;
               }
            }else if(A[i]>=N+1){
               restAllCounterToMax(counters,currentMaxCounter); 
            }
        }
        return counters;
    }
    
    public void restAllCounterToMax(int[] counters,int currentMaxCounter){
       // Assert.notnull(counters,"Counter is invalid!!");
         for(int i=0;i<counters.length;i++){
             counters[i]=currentMaxCounter;
         }
    }
}


// you can also use imports, for example:
// import java.util.*;

// you can write to stdout for debugging purposes, e.g.
// System.out.println("this is a debug message");

class Solution {
    public int solution(int[] A) {
        // write your code in Java SE 8
        int[] target= new int[A.length];
        for(int i=0;i<A.length;i++){
                if(A[i] > A.length || A[i]<=0){
                    return 0;
                }
                target[A[i]-1]=-1;
        }
        
        int sum=0;
        for (int i=0;i<target.length;i++){
            if(target[i]>=0){
                return 0;
            }
        }
        return 1;
    }
}

//MaxProfit

// you can also use imports, for example:
// import java.util.*;

// you can write to stdout for debugging purposes, e.g.
// System.out.println("this is a debug message");

class Solution {
    public int solution(int[] A) {
        // write your code in Java SE 8
        int minPrice=Integer.MAX_VALUE;
        int maxDifference=0;
        int diff=0;;
        for(int i=0;i< A.length;i++){
            if(minPrice > A[i]){
                minPrice=A[i];
            }else{
                diff=A[i]-minPrice;
                if(diff>maxDifference){
                    maxDifference=diff;
                }
            }
        }
        return maxDifference;
    }
}

###Equilibrium
// you can also use imports, for example:
// import java.util.*;

// you can write to stdout for debugging purposes, e.g.
// System.out.println("this is a debug message");


class Solution {
    public int solution(int[] A) {
      // write your code in Java SE 8
	        long totalSum=0;
	        long totalSoFar=0;
	        
	        for(int i=0;i<A.length;i++){
	            totalSum+=A[i];
	        }
	        long totalRemaining=totalSum;
	        for(int i=0;i<A.length;i++){
	            totalRemaining-=A[i];
	            if(totalSoFar==totalRemaining){
	                return i;
	            }
	            totalSoFar+=A[i];
	        }
	        return -1;
	        
    }
}
